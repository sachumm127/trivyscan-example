name: Build,scan,tag,push

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'  
  pull_request:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  build_and_scan:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1

    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}
      image-uri: ${{ steps.image-tag.outputs.uri }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate Image Tag
      id: image-tag
      run: |
        # Generate a unique image tag using the commit SHA (github.sha)
        IMAGE_TAG="${{ github.sha }}"
        
        # Output the tag so it can be used later in the pipeline
        echo "tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
        echo "Using image tag: $IMAGE_TAG"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}  

    - name: Retrieve AWS Account ID
      id: aws-account-id
      run: |
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
        echo "AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}" >> $GITHUB_ENV  # Store the AWS Account ID as an environment variable  

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        docker build -t myapp:latest .

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@v0.0.10
      with:
        image-ref: myapp:latest  
        severity: CRITICAL
        exit-code: 1
        scan-type: "image"
      continue-on-error: true

    - name: Tag Docker image
      run: |
        docker tag myapp:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/myapp:${{ github.sha }}

    - name: Push Docker image to ECR
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/myapp:${{ github.sha }}
        cache-from: type=none
        platforms: linux/amd64
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
